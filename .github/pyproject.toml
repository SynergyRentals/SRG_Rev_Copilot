[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "srg-rm-copilot"
version = "0.1.0"
description = "Production-ready Python package + CLI + ETL for Wheelhouse data with AI-powered development automation"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "SRG Team"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
]
requires-python = ">=3.11,<4.0"
dependencies = [
    "typer>=0.12",
    "requests>=2.32",
    "pandas>=2.2",
    "pyarrow>=16",
    "openai>=1.0.0",
    "pydantic>=2.0.0",
    "python-dateutil>=2.8.0",
    "pytz>=2024.1",
    "tenacity>=9",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2",
    "pytest-cov>=5",
    "pytest-httpx>=0.30; python_version < '3.13'",  # if you mock HTTPX
    "ruff>=0.3",
    "black>=24",
    "mypy>=1.10",
    "types-requests",
    "types-pytz",
]

[project.urls]
Homepage = "https://github.com/srg/srg-rm-copilot"
Repository = "https://github.com/srg/srg-rm-copilot.git"
Issues = "https://github.com/srg/srg-rm-copilot/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/srg_rm_copilot"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.ruff]
target-version = "py311"
line-length = 88
exclude = [
    ".cache",
    ".git",
    ".local",
    ".venv",
    "__pycache__",
    "venv",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501"]
"scripts/*" = ["C901"]  # Allow complex functions in scripts
"src/srg_rm_copilot/etl.py" = ["C901"]  # ETL complexity is expected

[tool.black]
target-version = ['py311']
line-length = 88
include = '\\.?pyi?$'
extend-exclude = '''
/(
  # directories
  \\\.eggs
  | \\\.git
  | \\\.hg
  | \\\.mypy_cache
  | \\\.tox
  | \\\.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/srg_rm_copilot",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[tool.mypy]
python_version = "3.12"
plugins = []
pretty = true
show_error_codes = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
disallow_untyped_defs = false
check_untyped_defs = false
ignore_missing_imports = true

[mypy-tests.*]
disallow_untyped_defs = false
